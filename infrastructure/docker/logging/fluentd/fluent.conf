# fluent-plugin-elasticsearch v5.2.0
# fluent-plugin-kubernetes_metadata_filter v3.1.0

# System-wide configurations
<system>
  log_level info
  workers 4
  root_dir /fluentd/log
  
  # Performance tuning
  suppress_repeated_stacktrace true
  emit_error_log_interval 60s
  ignore_repeated_log_interval 60s
  
  # Thread configurations
  flush_thread_count 2
  flush_thread_interval 0.1
  flush_thread_burst_interval 0.01
</system>

# Prometheus monitoring endpoint
<source>
  @type prometheus
  bind 0.0.0.0
  port 24231
  metrics_path /metrics
</source>

# Health check endpoint
<source>
  @type monitor_agent
  bind 0.0.0.0
  port 24232
</source>

# Forward protocol input
<source>
  @type forward
  port 24224
  bind 0.0.0.0
  tag forward.logs
</source>

# Container log input
<source>
  @type tail
  path /var/log/containers/*.log
  pos_file /var/log/fluentd-containers.log.pos
  tag kubernetes.*
  read_from_head true
  
  <parse>
    @type json
    time_key time
    time_format %Y-%m-%dT%H:%M:%S.%NZ
    keep_time_key true
  </parse>
</source>

# Kubernetes metadata enrichment
<filter kubernetes.**>
  @type kubernetes_metadata
  kubernetes_url https://kubernetes.default.svc
  cache_size 1000
  watch true
  bearer_token_file /var/run/secrets/kubernetes.io/serviceaccount/token
  merge_json_log true
  preserve_json_log true
</filter>

# Add additional metadata
<filter kubernetes.**>
  @type record_transformer
  enable_ruby true
  
  <record>
    service_name ${record['kubernetes']['labels']['app']}
    environment ${record['kubernetes']['namespace_name']}
    container_name ${record['kubernetes']['container_name']}
    pod_name ${record['kubernetes']['pod_name']}
    cluster_name ${record['kubernetes']['cluster_name']}
    node_name ${record['kubernetes']['host']}
    log_timestamp ${time.strftime('%Y-%m-%dT%H:%M:%S.%NZ')}
  </record>
</filter>

# Output to Elasticsearch
<match kubernetes.**>
  @type elasticsearch
  host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
  port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
  scheme "#{ENV['FLUENT_ELASTICSEARCH_SCHEME']}"
  user "#{ENV['FLUENT_ELASTICSEARCH_USER']}"
  password "#{ENV['FLUENT_ELASTICSEARCH_PASSWORD']}"
  
  logstash_format true
  logstash_prefix mint-clone-logs
  include_tag_key true
  type_name log
  
  # Connection settings
  reconnect_on_error true
  reload_connections true
  reload_on_failure true
  request_timeout 30s
  
  # Retry settings
  retry_limit 5
  retry_wait 30s
  
  <buffer>
    @type file
    path /var/log/fluentd-buffers/kubernetes.system.buffer
    
    # Buffer configuration
    flush_mode interval
    flush_interval 30s
    flush_thread_count 2
    
    # Retry configuration
    retry_type exponential_backoff
    retry_forever false
    retry_max_interval 30s
    
    # Size limits
    chunk_limit_size 2M
    total_limit_size 512M
    queue_limit_length 8
    
    # Overflow behavior
    overflow_action block
  </buffer>
  
  # Enable compression
  compression_level 6
</match>

# Error handling
<label @ERROR>
  <match **>
    @type file
    path /fluentd/log/error.log
    append true
    
    <buffer>
      @type file
      path /var/log/fluentd-buffers/error.buffer
      flush_mode interval
      flush_interval 30s
      retry_forever false
      retry_max_interval 30s
    </buffer>
  </match>
</label>