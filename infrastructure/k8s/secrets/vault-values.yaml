# HashiCorp Vault Helm Chart Values Configuration
# Version: 0.24.0
# Global settings
global:
  enabled: true
  tlsDisable: false
  image:
    repository: "hashicorp/vault"
    tag: "1.13.1"
  imagePullSecrets: []
  namespace: mint-clone

# Server configuration
server:
  # High Availability configuration
  ha:
    enabled: true
    replicas: 3
    raft:
      enabled: true
      setNodeId: true
      config: |
        ui = true
        listener "tcp" {
          tls_disable = 0
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          tls_cert_file = "/vault/userconfig/tls/tls.crt"
          tls_key_file = "/vault/userconfig/tls/tls.key"
        }

  # Resource allocation
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

  # Storage configuration
  storage:
    type: "aws"
    config:
      region: "us-east-1"
      kmsKeyId: "${KMS_KEY_ID}"
      dynamodb_table: "vault-data"
      recovery_mode: true
      ha_enabled: "true"
      max_parallel: "128"
      backup:
        enabled: true
        schedule: "0 0 * * *"
        retention: "720h"

  # Audit logging configuration
  audit:
    enabled: true
    type: "file"
    path: "/vault/audit"
    options:
      file_path: "/vault/audit/vault-audit.log"
      log_raw: "false"
      hmac_accessor: "true"
      mode: "0600"
      format: "json"
      rotate_bytes: 10485760  # 10MB
      rotate_duration: "24h"
      rotate_max_files: 10

  # Service configuration
  service:
    enabled: true
    type: ClusterIP
    port: 8200
    targetPort: 8200
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8200"
      prometheus.io/path: "/v1/sys/metrics"

  # Monitoring configuration
  monitoring:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: "30s"
      scrapeTimeout: "10s"
      selector:
        release: vault
      path: "/v1/sys/metrics"
      params:
        format: ["prometheus"]

# UI configuration
ui:
  enabled: true
  serviceType: ClusterIP
  externalTrafficPolicy: Local
  activeVaultPodOnly: true
  serviceNodePort: null
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"

# Injector configuration
injector:
  enabled: true
  replicas: 2
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"
  metrics:
    enabled: true

# Security configuration
securityContext:
  pod:
    runAsUser: 100
    runAsGroup: 1000
    fsGroup: 1000
  container:
    capabilities:
      add: ["IPC_LOCK"]

# TLS configuration
tls:
  enabled: true
  serverAdditionalDNS: ["vault.mint-clone.svc.cluster.local"]
  certManager:
    enabled: true
    issuerRef:
      name: "vault-issuer"
      kind: "ClusterIssuer"

# Initialization and unsealing
autoUnsealing:
  enabled: true
  aws:
    kmsKeyId: "${KMS_KEY_ID}"
    kmsRegion: "us-east-1"
    endpoint: "https://kms.us-east-1.amazonaws.com"

# Volume configuration
volumes:
  - name: audit-storage
    persistentVolumeClaim:
      claimName: vault-audit
  - name: tls
    secret:
      secretName: vault-tls

volumeMounts:
  - name: audit-storage
    mountPath: /vault/audit
  - name: tls
    mountPath: /vault/userconfig/tls
    readOnly: true

# PVC for audit logs
persistence:
  enabled: true
  storageClass: "gp2"
  accessMode: ReadWriteOnce
  size: 10Gi
  annotations:
    backup.velero.io/backup-volumes: audit-storage

# Affinity and anti-affinity rules
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: vault
            app.kubernetes.io/instance: vault
        topologyKey: kubernetes.io/hostname